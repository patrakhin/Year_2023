//My reflection to task 2.5
/*
Прочитать даже собственное решение вызывает определенные затруднения.
В части, в задаче четко сказано: описать связи между таблицами.
В моем ответе написана таблица и написана связь, но, с какой таблицей эта связь – непонятно.
Буквально вырванные из схемы взаимосвязей таблицы – искажают  ответы. Решение не верно.
Так к примеру:
EmployeesTerritories, связь один ко многим, один работник закреплен за несколькими территориями.
Данная таблица является «хранилищем» пары ключей «Employees/Territories»,
а взаимосвязаны таблицы Employees  и Territories через «Employees/Territories»,
где Employees  хранит данные по работникам (у каждого работника свой айди)
а Territories хранит айди каждой территории, ее описание и внешний ключ для каждого региона,
входящего в состав одной из указанных территорий.
Соответственно и тип связи между таблицами Employees  и Territories – многие ко многим,
через таблицу (хранилище пар ключей) EmployeesTerritories.

Разбираю эталонное решение далее.
Таблица Orders  имеет отношение многие ко многим через таблицу   OrderDetails с таблицей Products.
В таблице Orders  каждая запись имеет айди (OrderID) – первичный ключ,
в таблице Products так же, каждая запись имеет свой айди (ProductID) – первичный ключ,
данные таблицы являются справочными, а вот хранилищем
пары ключей OrderID/ ProductID является таблица – OrderDetails.
Итак, есть две таблицы, которые связанны через третью – хранилище,
следовательно отношение между таблицами (через третью), многие ко многим.

Таблица Customers  имеет отношение один ко многим  с таблицей Orders.
Разберемся почему это именно так.
Таблица Customers  содержит записи, каждая запись имеет свой айди (CustomerID).
А таблица Orders содержит OrderID и CustomerID.
Если проанализировать таблицу, можно сделать вывод, один клиент может имеет много заказов,
но каждый заказ сделан только одним клиентом.
Следовательно, между таблицами реализовано отношение один ко многим.

Таблица Employees имеет отношение один ко многим с таблицей Orders.
Разбираю, почему это так.
Таблица Employees содержит записи, каждая запись имеет свой айди (EmployeeID).
А таблица Orders содержит OrderID и EmployeeID.
Если проанализировать таблицу, можно сделать вывод, один работник может отвечать за много заказов,
но у каждого заказа только один ответственный работник.
Следовательно, между таблицами реализовано отношение один ко многим.

Таблица Shippers  имеет отношение один ко многим с таблицей Orders.
Разбираю, почему это так.
Таблица Shippers  содержит айди для каждой записи,
а таблица Orders имеет поле Ship Via (через кого отправляем).
Следовательно, у каждого перевозчика может быть много заказов,
но у каждого заказа – один перевозчик (доставщик).
Следовательно, между таблицами реализовано отношение один ко многим.

Таблица Suppliers  имеет отношение один ко многим с таблицей Products.
Разбираю, почему это так.
Таблица Suppliers  содержит айди для каждой записи, в записях указаны поставщики.
А таблица Products содержит поле SupplierID. Т.е. каждый поставщик может доставлять
разные (много) продукты, но у каждого продукта – один поставщик.
Следовательно, между таблицами реализовано отношение один ко многим.

Таблица Categories  имеет отношение один ко многим с таблицей Products.
Разбираю, почему это так.
Таблица Categories  содержит айди для каждой записи,
в записях указаны типы продуктов и какие продукты входят в каждый тип.
А таблица Products содержит поле CategoryID. У каждой категорий может быть
много продуктов (в таблице категории, например, поле: напитки
и следующее поле(описание) – перечисление этих напитков) , но каждый продукт имеет только свою категорию.
Следовательно, между таблицами реализовано отношение один ко многим.

Таблица Regions  имеет отношение один ко многим с таблицей Territories.
Разбираю, почему это так.
Таблица Regions  содержит айди для каждой записи, в записях указаны типы регионов (Северный, Южный и т.д.).
Таблица Territories содержит поле RegionID.
Проанализировав таблицу Territories, можно сделать вывод: регионы могут содержать много территорий,
но у каждой территории только один регион.
Следовательно, между таблицами реализовано отношение один ко многим.
*/

//Solution 3.9.1
select ProductName, UnitsInStock from Products;

//Solution 3.9.2
select ProductName, UnitPrice from Products
where (UnitPrice < 20);

//Solution 3.9.3
select * from Orders
where (Freight >= 11.7) AND (Freight <= 98.1);

//Solution 3.9.4
select * from Employees
where (TitleOfCourtesy = 'Mr.') OR (TitleOfCourtesy = 'Dr.');

//Solution 3.9.5
select * from Suppliers
where Country = 'Japan';

//Solution 3.9.6
select * from Orders
where (EmployeeID = 2) OR (EmployeeID = 4) OR (EmployeeID = 8);

//Solution 3.9.7
select OrderID, ProductID, UnitPrice, Quantity from [Order Details]
where (UnitPrice > 40) AND (Quantity < 10);